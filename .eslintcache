[{"/Users/surabhigovil/file_storage/src/index.js":"1","/Users/surabhigovil/file_storage/src/aws-exports.js":"2","/Users/surabhigovil/file_storage/src/App.js":"3","/Users/surabhigovil/file_storage/src/reportWebVitals.js":"4","/Users/surabhigovil/file_storage/src/UserFiles.js":"5","/Users/surabhigovil/file_storage/src/graphql/mutations.js":"6","/Users/surabhigovil/file_storage/src/graphql/queries.js":"7","/Users/surabhigovil/file_storage/src/Users.js":"8","/Users/surabhigovil/file_storage/src/graphql/subscriptions.js":"9","/Users/surabhigovil/file_storage/src/CreateDoc.js":"10"},{"size":707,"mtime":1607215181465,"results":"11","hashOfConfig":"12"},{"size":799,"mtime":1607150150191,"results":"13","hashOfConfig":"12"},{"size":179,"mtime":1607108340360,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1607065115053,"results":"15","hashOfConfig":"12"},{"size":2641,"mtime":1607072467327,"results":"16","hashOfConfig":"12"},{"size":3175,"mtime":1607150147042,"results":"17","hashOfConfig":"12"},{"size":2034,"mtime":1607150146892,"results":"18","hashOfConfig":"12"},{"size":8663,"mtime":1607215802288,"results":"19","hashOfConfig":"12"},{"size":2233,"mtime":1607150147141,"results":"20","hashOfConfig":"12"},{"size":4522,"mtime":1607106097023,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1u3zevm",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":2,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},"/Users/surabhigovil/file_storage/src/index.js",["47","48"],"/Users/surabhigovil/file_storage/src/aws-exports.js",[],["49","50"],"/Users/surabhigovil/file_storage/src/App.js",["51"],"import React from 'react'\nimport Users from './Users'\nimport CreateDoc from './CreateDoc'\n\nfunction App() {\n  return (\n    //<CreateDoc />\n    <Users />\n  )\n}\n\nexport default App;","/Users/surabhigovil/file_storage/src/reportWebVitals.js",[],"/Users/surabhigovil/file_storage/src/UserFiles.js",["52","53"],"import React, { useState, useReducer, useEffect } from 'react'\nimport { AmplifySignOut, withAuthenticator } from '@aws-amplify/ui-react';\nimport Amplify, {Auth, Storage, API, graphqlOperation } from 'aws-amplify'\nimport { v4 as uuid } from 'uuid'\n\nimport { createUserFiles as CreateUserFiles } from './graphql/mutations'\nimport { listUserFiless as ListUserFiles } from './graphql/queries'\nimport config from './aws-exports'\n\nAmplify.configure(config);\n\nconst {\n  aws_user_files_s3_bucket_region: region,\n  aws_user_files_s3_bucket: bucket\n} = config\n\nfunction App() {\n  const [file, updateFile] = useState(null)\n  const [fileName, updateFileName] = useState('')\n  const [files, updateFiles] = useState([])\n  useEffect(() => {\n    listUserFiles()\n  }, [])\n  \n  async function listUserFiles() {\n    const files = await API.graphql(graphqlOperation(ListUserFiles))\n    updateFiles(files.data.listUserFiless.items)\n  }\n\n  function handleChange(event) {\n    const { target: { value, files } } = event\n    const fileForUpload = files[0]\n    updateFileName(fileForUpload.name[0])\n    updateFile(fileForUpload || value)\n  }\n\n  async function createUserFiles(event) {\n    event.preventDefault()\n    if (file) {\n      const extension = file.name.split(\".\")[1]\n      const { type: mimeType } = file\n      const key = `images/${uuid()}${fileName}.${extension}`      \n      const url = `https://${bucket}.s3.${region}.amazonaws.com/public/${key}`\n      const inputData = { name: fileName , image: url }\n      \n      try {\n        await Storage.put(key, file, {\n          contentType: mimeType\n        })\n        await API.graphql(graphqlOperation(CreateUserFiles, { input: inputData }))\n        console.log('successfully created file!')\n      } catch (err) {\n        console.log('error: ', err)\n      }\n    }\n  }\n\n  return (\n    <div style={styles.container}>\n      <input\n        type=\"file\"\n        onChange={handleChange}\n        style={{margin: '10px 0px'}}\n      />\n      <input\n        placeholder='File Name'\n        value={fileName}\n        onChange={e => updateFileName(e.target.value)}\n      />\n      <button\n        style={styles.button}\n        onClick={createUserFiles}>Create File</button>\n\n      {\n        files.map((p, i) => (\n          <p>{p.name}</p>\n        ))\n      }\n      <AmplifySignOut />\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    width: 400,\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  image: {\n    width: 400\n  },\n  button: {\n    width: 200,\n    backgroundColor: '#ddd',\n    cursor: 'pointer',\n    height: 30,\n    margin: '0px 0px 8px'\n  }\n}\n\nexport default withAuthenticator(App);",["54","55"],"/Users/surabhigovil/file_storage/src/graphql/mutations.js",[],"/Users/surabhigovil/file_storage/src/graphql/queries.js",[],"/Users/surabhigovil/file_storage/src/Users.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"/Users/surabhigovil/file_storage/src/graphql/subscriptions.js",[],"/Users/surabhigovil/file_storage/src/CreateDoc.js",["77","78","79","80","81"],"import React, { useState, useReducer, useEffect } from 'react'\nimport { AmplifySignOut, withAuthenticator } from '@aws-amplify/ui-react';\nimport Amplify, {Auth, Storage, API, graphqlOperation } from 'aws-amplify'\nimport { v4 as uuid } from 'uuid'\n\nimport { createDocument } from './graphql/mutations'\nimport { listDocuments as ListDocuments } from './graphql/queries'\nimport { onCreateDocument } from './graphql/subscriptions'\nimport config from './aws-exports'\n\nAmplify.configure(config);\n\nconst {\n  aws_user_files_s3_bucket_region: region,\n  aws_user_files_s3_bucket: bucket\n} = config\n\nconst initialState = {\n  docs: []\n}\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'SET_DOC':\n      return { ...state, docs: action.docs }\n    case 'ADD_DOC':\n      return { ...state, docs: [action.doc, ...state.docs] }\n    default:\n      return state\n  }\n}\n\nfunction App() {\n    const [file, updateFile] = useState(null)\n    const [signedInUser, updateUser] = useState('')\n    const [fileName, updateFileName] = useState('')\n    const [files, updateFiles] = useState([])\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const [fileUrl, updateDocUrl] = useState('')\n  \n    function handleChange(event) {\n      const { target: { value, files } } = event\n      const fileForUpload = files[0]\n      const user = Auth.currentAuthenticatedUser()\n      updateUser(user.username)\n      updateFileName(fileForUpload.name[0])\n      updateFile(fileForUpload || value)\n    }\n\n    async function fetchImage(key) {\n      try {\n        const imageData = await Storage.get(key, {level: 'private'})\n        console.log(imageData)\n        updateDocUrl(imageData)\n      } catch(err) {\n        console.log('error: ', err)\n      }\n    }\n    \n    async function fetchDocs() {\n      try {\n       let docs = await API.graphql(graphqlOperation(ListDocuments))\n       docs = docs.data.listDocuments.items\n       dispatch({ type: 'SET_DOCS', docs })\n      } catch(err) {\n        console.log('error fetching docs')\n      }\n    }\n\n    async function CreateFile(event) {\n      event.preventDefault()\n      if (file) {\n        const extension = file.name.split(\".\")[1]\n        // const url = `https://${bucket}.s3.${region}.amazonaws.com/public/${key}`\n        const { name: fileName, type: mimeType } = file  \n        const key = `${uuid()}${fileName}`\n        const url = `https://${bucket}.s3.${region}.amazonaws.com/public/${key}`\n        const fileForUpload = {\n            bucket,\n            key,\n            region,\n        }\n        const inputData = { name: fileName , fileLocation: fileForUpload, localowner: signedInUser}\n        try {\n          await Storage.put(key, file, {\n            contentType: mimeType\n          })\n          await API.graphql(graphqlOperation(createDocument, { input: inputData }))\n          console.log('successfully created file!')\n        } catch (err) {\n          console.log('error: ', err)\n        }\n      }\n    }\n\n    useEffect(() => {\n      fetchDocs()\n      const subscription = API.graphql(graphqlOperation(onCreateDocument))\n        .subscribe({\n          next: async docData => {\n            const { onCreateDocument } = docData.value.data\n            dispatch({ type: 'ADD_DOCS', doc: onCreateDocument })\n          }\n        })\n      return () => subscription.unsubscribe()\n    }, [])\n\nreturn (\n    <div style={styles.container}>\n      <input\n        type=\"file\"\n        onChange={handleChange}\n        style={{margin: '10px 0px'}}\n      />\n      <input\n        placeholder='File Name'\n        value={fileName}\n        onChange={e => updateFileName(e.target.value)}\n      />\n      <button\n        style={styles.button}\n        onClick={CreateFile}>Create File</button>\n        {\n        state.docs.map((u, i) => {\n          return (\n            <div\n              key={i}\n            >\n              <p\n                style={styles.username}\n               onClick={() => fetchImage(u.fileLocation.key)}>{u.name}</p>\n            </div>\n          )\n        })\n      }\n      <img\n        src={fileUrl}\n        style={{ width: 300 }}\n      />\n      <AmplifySignOut />\n    </div>\n  );\n}\nconst styles = {\n    container: {\n      width: 400,\n      margin: '0 auto',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    image: {\n      width: 400\n    },\n    button: {\n      width: 200,\n      backgroundColor: '#ddd',\n      cursor: 'pointer',\n      height: 30,\n      margin: '0px 0px 8px'\n    }\n  }\n  \n  export default withAuthenticator(App, { includeGreetings: true });",{"ruleId":"82","severity":1,"message":"83","line":9,"column":25,"nodeType":"84","messageId":"85","endLine":9,"endColumn":30},{"ruleId":"82","severity":1,"message":"86","line":9,"column":32,"nodeType":"84","messageId":"85","endLine":9,"endColumn":38},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"82","severity":1,"message":"91","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":17},{"ruleId":"82","severity":1,"message":"92","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":37},{"ruleId":"82","severity":1,"message":"93","line":3,"column":18,"nodeType":"84","messageId":"85","endLine":3,"endColumn":22},{"ruleId":"87","replacedBy":"94"},{"ruleId":"89","replacedBy":"95"},{"ruleId":"82","severity":1,"message":"96","line":2,"column":25,"nodeType":"84","messageId":"85","endLine":2,"endColumn":28},{"ruleId":"82","severity":1,"message":"97","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":15},{"ruleId":"82","severity":1,"message":"98","line":9,"column":21,"nodeType":"84","messageId":"85","endLine":9,"endColumn":30},{"ruleId":"82","severity":1,"message":"99","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":14,"column":25,"nodeType":"84","messageId":"85","endLine":14,"endColumn":30},{"ruleId":"82","severity":1,"message":"86","line":14,"column":32,"nodeType":"84","messageId":"85","endLine":14,"endColumn":38},{"ruleId":"82","severity":1,"message":"100","line":15,"column":8,"nodeType":"84","messageId":"85","endLine":15,"endColumn":12},{"ruleId":"82","severity":1,"message":"101","line":16,"column":8,"nodeType":"84","messageId":"85","endLine":16,"endColumn":13},{"ruleId":"82","severity":1,"message":"102","line":42,"column":24,"nodeType":"84","messageId":"85","endLine":42,"endColumn":34},{"ruleId":"82","severity":1,"message":"103","line":44,"column":10,"nodeType":"84","messageId":"85","endLine":44,"endColumn":17},{"ruleId":"82","severity":1,"message":"104","line":58,"column":18,"nodeType":"84","messageId":"85","endLine":58,"endColumn":27},{"ruleId":"82","severity":1,"message":"105","line":61,"column":21,"nodeType":"84","messageId":"85","endLine":61,"endColumn":29},{"ruleId":"106","severity":2,"message":"107","line":62,"column":38,"nodeType":"84","messageId":"108","endLine":62,"endColumn":46},{"ruleId":"82","severity":1,"message":"109","line":64,"column":13,"nodeType":"84","messageId":"85","endLine":64,"endColumn":22},{"ruleId":"106","severity":2,"message":"107","line":64,"column":33,"nodeType":"84","messageId":"108","endLine":64,"endColumn":41},{"ruleId":"82","severity":1,"message":"110","line":84,"column":11,"nodeType":"84","messageId":"85","endLine":84,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":105,"column":24,"nodeType":"113","messageId":"114","endLine":105,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":106,"column":18,"nodeType":"117","messageId":"118","endLine":106,"endColumn":20},{"ruleId":"82","severity":1,"message":"119","line":135,"column":11,"nodeType":"84","messageId":"85","endLine":135,"endColumn":17},{"ruleId":"82","severity":1,"message":"120","line":136,"column":11,"nodeType":"84","messageId":"85","endLine":136,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":138,"column":27,"nodeType":"113","messageId":"114","endLine":138,"endColumn":29},{"ruleId":"82","severity":1,"message":"121","line":37,"column":12,"nodeType":"84","messageId":"85","endLine":37,"endColumn":17},{"ruleId":"82","severity":1,"message":"122","line":37,"column":19,"nodeType":"84","messageId":"85","endLine":37,"endColumn":30},{"ruleId":"82","severity":1,"message":"123","line":73,"column":15,"nodeType":"84","messageId":"85","endLine":73,"endColumn":24},{"ruleId":"82","severity":1,"message":"124","line":77,"column":15,"nodeType":"84","messageId":"85","endLine":77,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":136,"column":7,"nodeType":"127","endLine":139,"endColumn":9},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"'CreateDoc' is defined but never used.","'useReducer' is defined but never used.","'Auth' is defined but never used.",["128"],["129"],"'Nav' is defined but never used.","'Amplify' is defined but never used.","'listFiles' is defined but never used.","'BrowserRouter' is defined but never used.","'Home' is defined but never used.","'About' is defined but never used.","'updateUser' is assigned a value but never used.","'fileUrl' is assigned a value but never used.","'fetchFile' is defined but never used.","'mimeType' is assigned a value but never used.","no-undef","'fileName' is not defined.","undef","'inputData' is assigned a value but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'params' is defined but never used.","'fileOwners' is defined but never used.","'files' is assigned a value but never used.","'updateFiles' is assigned a value but never used.","'extension' is assigned a value but never used.","'url' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]